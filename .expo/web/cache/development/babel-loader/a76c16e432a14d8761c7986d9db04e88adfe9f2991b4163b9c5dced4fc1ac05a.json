{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport StoryScreen from \"./StoryScreen\";\nimport CallScreen from \"./CallScreen\";\nimport ChatScreen from \"./ChatScreen\";\nimport ProfileScreen from \"./ProfileScreen\";\nimport SettingScreen from \"./SettingScreen\";\nimport TextInputScreen from \"./TextInputScreen\";\nimport UpdateScreen from \"./UpdateScreen\";\nimport ConversationScreen from \"./CoversationScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function (_React$Component) {\n  _inherits(HomeScreen, _React$Component);\n  function HomeScreen() {\n    _classCallCheck(this, HomeScreen);\n    return _callSuper(this, HomeScreen, arguments);\n  }\n  _createClass(HomeScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n      this.delayedNavigation = setTimeout(function () {\n        _this.props.navigation.navigate('Chat');\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.delayedNavigation);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: styles.container,\n        children: _jsx(Text, {\n          children: \"Home Screen\"\n        })\n      });\n    }\n  }]);\n  return HomeScreen;\n}(React.Component);\nvar Stack = createStackNavigator();\nexport default function App() {\n  return _jsxs(NavigationContainer, {\n    children: [_jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      screenOptions: {\n        animationEnabled: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Story\",\n        component: StoryScreen,\n        options: {\n          title: null,\n          headerLeft: null,\n          headerTransparent: true\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Call\",\n        component: CallScreen,\n        options: {\n          title: null,\n          headerLeft: null,\n          headerTransparent: true\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Chat\",\n        component: ChatScreen,\n        options: {\n          title: null,\n          headerLeft: null,\n          headerTransparent: true\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: {\n          title: null,\n          headerLeft: null,\n          headerTransparent: true\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Setting\",\n        component: SettingScreen,\n        options: {\n          title: null,\n          headerLeft: null,\n          headerTransparent: true\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Text\",\n        component: TextInputScreen,\n        options: {\n          title: null,\n          headerLeft: null,\n          headerTransparent: true\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Update\",\n        component: UpdateScreen,\n        options: {\n          title: null,\n          headerLeft: null,\n          headerTransparent: true\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Conversation\",\n        component: ConversationScreen,\n        options: {\n          title: null,\n          headerLeft: null,\n          headerTransparent: true\n        }\n      })]\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","StatusBar","StyleSheet","Text","View","TouchableOpacity","NavigationContainer","createStackNavigator","FontAwesome5","StoryScreen","CallScreen","ChatScreen","ProfileScreen","SettingScreen","TextInputScreen","UpdateScreen","ConversationScreen","jsx","_jsx","jsxs","_jsxs","HomeScreen","_React$Component","_inherits","_classCallCheck","_callSuper","arguments","_createClass","key","value","componentDidMount","_this","delayedNavigation","setTimeout","props","navigation","navigate","componentWillUnmount","clearTimeout","render","style","styles","container","children","Component","Stack","App","Navigator","initialRouteName","screenOptions","animationEnabled","Screen","name","component","options","headerShown","title","headerLeft","headerTransparent","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["/Users/efeapoki/Downloads/re6ix-1/App.js"],"sourcesContent":["import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport StoryScreen from './StoryScreen'; // Import the StoryScreen component\nimport CallScreen from './CallScreen'; // Import the CallScreen component\nimport ChatScreen from './ChatScreen'; // Import the CallScreen component\nimport ProfileScreen from './ProfileScreen'; // Import the CallScreen component\nimport SettingScreen from './SettingScreen'; // Import the CallScreen component\nimport TextInputScreen from './TextInputScreen'; // Import the new screen component\nimport UpdateScreen from './UpdateScreen';\nimport ConversationScreen from './CoversationScreen';\n\n\nclass HomeScreen extends React.Component {\n  componentDidMount() {\n    // Delayed navigation to ChatScreen after 5 seconds\n    this.delayedNavigation = setTimeout(() => {\n      this.props.navigation.navigate('Chat');\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    // Clear the timeout when the component unmounts\n    clearTimeout(this.delayedNavigation);\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text>Home Screen</Text>\n      </View>\n    );\n  }\n}\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  return (\n    \n    <NavigationContainer>\n      <Stack.Navigator\n        initialRouteName=\"Home\"\n        screenOptions={{\n          animationEnabled: false, // Disable transition animation\n        }}\n      >\n        <Stack.Screen\n          name=\"Home\"\n          component={HomeScreen}\n          options={{ headerShown: false }} // Hide default header\n        />\n        <Stack.Screen\n          name=\"Story\"\n          component={StoryScreen}\n          options={{\n            title: null, // Remove the title\n            headerLeft: null, // Hide the back button\n            headerTransparent: true, // Remove the line at the top\n          }}\n        />\n        <Stack.Screen\n          name=\"Call\"\n          component={CallScreen}\n          options={{\n            title: null,\n            headerLeft: null, // Hide the back button\n            headerTransparent: true, // Remove the line at the top\n          }}\n        />\n        <Stack.Screen\n          name=\"Chat\"\n          component={ChatScreen}\n          options={{\n            title: null,\n            headerLeft: null, // Hide the back button\n            headerTransparent: true, // Remove the line at the top\n          }}\n        />\n        <Stack.Screen\n          name=\"Profile\"\n          component={ProfileScreen}\n          options={{\n            title: null,\n            headerLeft: null, // Hide the back button\n            headerTransparent: true, // Remove the line at the top\n          }}\n        />\n        <Stack.Screen\n          name=\"Setting\"\n          component={SettingScreen}\n          options={{\n            title: null,\n            headerLeft: null, // Hide the back button\n            headerTransparent: true, // Remove the line at the top\n          }}\n        />\n        <Stack.Screen\n          name=\"Text\"\n          component={TextInputScreen} // Ensure you are using the correct component reference\n          options={{\n            title: null,\n            headerLeft: null, // Hide the back button\n            headerTransparent: true, // Remove the line at the top\n          }}\n        />\n        <Stack.Screen\n          name=\"Update\"\n          component={UpdateScreen} // Ensure you are using the correct component reference\n          options={{\n            title: null,\n            headerLeft: null, // Hide the back button\n            headerTransparent: true, // Remove the line at the top\n          }}\n        />\n        <Stack.Screen\n          name=\"Conversation\"\n          component={ConversationScreen} // Ensure you are using the correct component reference\n          options={{\n            title: null,\n            headerLeft: null, // Hide the back button\n            headerTransparent: true, // Remove the line at the top\n          }}\n        />\n      </Stack.Navigator>\n      <StatusBar style=\"auto\" />\n    </NavigationContainer>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}